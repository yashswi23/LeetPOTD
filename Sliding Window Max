import java.util.*;

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int n = nums.length;
        Deque<Integer> q = new ArrayDeque<>();
        int[] arr = new int[n - k + 1];
        int j = 0;

        for (int i = 0; i < n; i++) {
            // Remove indices out of the current window
            while (!q.isEmpty() && q.peekFirst() < i - k + 1) {
                q.removeFirst();
            }

            // Remove smaller values from back of the deque
            while (!q.isEmpty() && nums[q.peekLast()] < nums[i]) {
                q.removeLast();
            }

            // Add current index
            q.addLast(i);

            // Record max once window is full
            if (i >= k - 1) {
                arr[j++] = nums[q.peekFirst()];
            }
        }

        return arr;
    }
}
